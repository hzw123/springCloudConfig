
# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/springcloud-integral?characterEncoding=utf-8&useSSL=false
#spring.datasource.username={cipher}07f5101201dc2d43b744c633b1d48628b896ca571279a6e103748a9de28c3e6a
#spring.datasource.password={cipher}3b6e65af8c10d2766dba099a590496a18cfd816ef9190c983bb56249595ae3f0
spring.datasource.username=root
spring.datasource.password=root
#rabbitmq
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
#spring.rabbitmq.username={cipher}07f5101201dc2d43b744c633b1d48628b896ca571279a6e103748a9de28c3e6a
#spring.rabbitmq.password={cipher}a48c092ab9a2d155309a1884d97c4ad8a54a8348dae7a5668be6c88009919263
spring.rabbitmq.username=admin
spring.rabbitmq.password=123456
# manual(手动ack) ,auto(自动ack)
spring.rabbitmq.listener.acknowledge-mode=manual

#spring.rabbitmq.listener.concurrency 指定最小的消费者数量.
#spring.rabbitmq.listener.max-concurrency 指定最大的消费者数量.
#spring.rabbitmq.listener.prefetch 指定一个请求能处理多少个消息，如果有事务的话，必须大于等于transaction数量.
#spring.rabbitmq.listener.transaction-size 指定一个事务处理的消息数量，最好是小于等于prefetch的数量


# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# Oracle请使用select 1 from dual
spring.datasource.validationQuery=SELECT 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1500



spring.redis.host=127.0.0.1
spring.redis.port=6379
#spring.redis.password={cipher}16b94c4e89f38a342b7a4e610288d83487e68a9ef0b244fd19d010ab58181af7
#spring.redis.password={cipher}AQA6CHQT7b2cGjFxcy+5i+vaXWmQpoql5xRx2KQEl1lBnyztJnHQW1afm9yMZ1HMnOg+5FWkp2J7Hge8QDb97CRwlw4L0u+2eKFD/dl1jM3RpxmHLXgrm9Phvt1qPhNK0wbhpsyVt0g8/y3cCyFdCEIGzDrUfm0Wlmp0Kl1QGN6LKfPFcv05hMq4FyFCpoGDtmnwffTdFcEE20rrugoS2SQhpVab/khn0+bK2WkuiIyQYD+GP/7BHcTaK5WkfWIBsLW6aVP/ywJjcAXv9A3kCaDC1xGBc55dZMizVEK4RyinyBsxvPqGGKM/n7sD5bn1beJ5lGNv7Bae3oDZLJu9VLXADVTxII7h+8qYvxX4vJzTeHdCmCasaxGmYntjOUrSI74=
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1

#健康检查，只能配置到aplication，不然会引起不良反应（注册到Eureka server状态为unknown，无法被admin发现）
eureka.client.healthcheck.enabled=true

#mongodb
spring.data.mongodb.uri=mongodb://127.0.0.1/shop_integral_logs

#开关
switch=true

